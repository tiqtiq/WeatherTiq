{
  "abstract" : [
    {
      "text" : "Returns the weather forecast for the requested location. This is a variadic API in which any",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "combination of data sets can be requested and returned as a tuple.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/WeatherTiq\/documentation\/WeatherTiq",
        "doc:\/\/WeatherTiq\/documentation\/WeatherTiq\/WeatherService"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/WeatherTiq\/documentation\/WeatherTiq\/WeatherService\/weather(for:including:_:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:10WeatherTiq0A7ServiceC7weather3for9including_x_q_tSo10CLLocationC_AA0A5QueryVyxGAJyq_GtYaKr0_lF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "weather"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "T1"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "genericParameter",
        "text" : "T2"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "externalParam",
        "text" : "for"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:11LocationTiq0A0a",
        "text" : "Location"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "including"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10WeatherTiq0A5QueryV",
        "text" : "WeatherQuery"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "text" : "T1"
      },
      {
        "kind" : "text",
        "text" : ">, "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:10WeatherTiq0A5QueryV",
        "text" : "WeatherQuery"
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "typeIdentifier",
        "text" : "T2"
      },
      {
        "kind" : "text",
        "text" : ">) "
      },
      {
        "kind" : "keyword",
        "text" : "async"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "keyword",
        "text" : "throws"
      },
      {
        "kind" : "text",
        "text" : " -> ("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "T1"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "T2"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "modules" : [
      {
        "name" : "WeatherTiq"
      }
    ],
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "15.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "12.0",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "15.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "weather(for:including:_:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "final"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "weather"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "T1"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "genericParameter",
              "text" : "T2"
            },
            {
              "kind" : "text",
              "text" : ">("
            },
            {
              "kind" : "externalParam",
              "text" : "for"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "location"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:11LocationTiq0A0a",
              "text" : "Location"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "including"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "dataSet1"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/WeatherTiq\/documentation\/WeatherTiq\/WeatherQuery",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:10WeatherTiq0A5QueryV",
              "text" : "WeatherQuery"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "typeIdentifier",
              "text" : "T1"
            },
            {
              "kind" : "text",
              "text" : ">, "
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "dataSet2"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/WeatherTiq\/documentation\/WeatherTiq\/WeatherQuery",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:10WeatherTiq0A5QueryV",
              "text" : "WeatherQuery"
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "typeIdentifier",
              "text" : "T2"
            },
            {
              "kind" : "text",
              "text" : ">) "
            },
            {
              "kind" : "keyword",
              "text" : "async"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "throws"
            },
            {
              "kind" : "text",
              "text" : " -> ("
            },
            {
              "kind" : "typeIdentifier",
              "text" : "T1"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "T2"
            },
            {
              "kind" : "text",
              "text" : ")"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "return-value",
          "level" : 2,
          "text" : "Return Value",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "The requested weather data sets as a tuple.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The requested location.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "location"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Weather data error ",
                  "type" : "text"
                },
                {
                  "code" : "WeatherError",
                  "type" : "codeVoice"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "Throws",
          "style" : "note",
          "type" : "aside"
        },
        {
          "inlineContent" : [
            {
              "text" : "Example usage:",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : "let (current, minute) = try await service.weather(for: newYork, including: .current, .minute)",
              "type" : "codeVoice"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/weathertiq\/weatherservice\/weather(for:including:_:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://WeatherTiq/documentation/WeatherTiq": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/WeatherTiq\/documentation\/WeatherTiq",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "WeatherTiq",
  "type" : "topic",
  "url" : "\/documentation\/weathertiq"
},
"doc://WeatherTiq/documentation/WeatherTiq/WeatherQuery": {
  "abstract" : [
    {
      "text" : "A structure that encapsulates a generic weather dataset request.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "WeatherQuery"
    }
  ],
  "identifier" : "doc:\/\/WeatherTiq\/documentation\/WeatherTiq\/WeatherQuery",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "WeatherQuery"
    }
  ],
  "role" : "symbol",
  "title" : "WeatherQuery",
  "type" : "topic",
  "url" : "\/documentation\/weathertiq\/weatherquery"
},
"doc://WeatherTiq/documentation/WeatherTiq/WeatherService": {
  "abstract" : [
    {
      "code" : "WeatherService",
      "type" : "codeVoice"
    },
    {
      "text" : " is the entry point into the ",
      "type" : "text"
    },
    {
      "code" : "WeatherTiq",
      "type" : "codeVoice"
    },
    {
      "text" : " service.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "WeatherService"
    }
  ],
  "identifier" : "doc:\/\/WeatherTiq\/documentation\/WeatherTiq\/WeatherService",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "WeatherService"
    }
  ],
  "role" : "symbol",
  "title" : "WeatherService",
  "type" : "topic",
  "url" : "\/documentation\/weathertiq\/weatherservice"
},
"doc://WeatherTiq/documentation/WeatherTiq/WeatherService/weather(for:including:_:)": {
  "abstract" : [
    {
      "text" : "Returns the weather forecast for the requested location. This is a variadic API in which any",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "combination of data sets can be requested and returned as a tuple.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "weather"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "for"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:11LocationTiq0A0a",
      "text" : "Location"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "including"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10WeatherTiq0A5QueryV",
      "text" : "WeatherQuery"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10WeatherTiq0A5QueryV",
      "text" : "WeatherQuery"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ">) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T1"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T2"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/WeatherTiq\/documentation\/WeatherTiq\/WeatherService\/weather(for:including:_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "weather(for:including:_:)",
  "type" : "topic",
  "url" : "\/documentation\/weathertiq\/weatherservice\/weather(for:including:_:)"
}
}
}